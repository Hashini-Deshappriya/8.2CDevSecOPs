pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Hashini-Deshappriya/8.2CDevSecOps.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }
        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        stage('Run Tests') {
            steps {
                withEnv([
                    'JEST_JUNIT_OUTPUT_DIR=test-results',
                    'JEST_JUNIT_OUTPUT_NAME=results.xml'
                    
                ])
                {
                    sh 'mkdir -p test-results'
                    sh 'npm test || true' // Allows pipeline to continue despite test failures
                    sh 'ls -l test-results'
                    junit 'test-results/results.xml'
                }    
               
            }
            
            
        }

        
        stage('Run Code Quality Scan') {
            environment{
                scannerHome = tool 'Sonar'
            }
            steps {
                withSonarQubeEnv('Sonar'){
                	sh '${scannerHome}/bin/sonar-scanner'
                	//sh 'sonar-scanner'
                }
            }
	    }
        stage('NPM Audit (Security Scan)') {
            steps {
                sh 'npm audit || true' // This will show known CVEs in the output
            }

            
        }
        stage('Deploy') {
            steps {
                sh 'docker-compose down'
                sh 'docker-compose up -d'
            }
        }
    }

}
